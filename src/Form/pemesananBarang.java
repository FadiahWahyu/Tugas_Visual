/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Koneksi.koneksi;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NANRC
 */
public class pemesananBarang extends javax.swing.JPanel {
    private Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode;
    private Map<String, Integer> barangMap = new HashMap<>();
    private String selectedKode = "";
    private String selectedTanggal = "";
    private String selectedId = null;


    /**
     * Creates new form dataBarang1
     */
    public pemesananBarang() {
        initComponents();
        kosong();
        aktif();
        datatable();
        loadKodeBarang();
        aturListenerComboBoxBarang();
        hitungTotal();
        txt_total.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        panel_custom11 = new Form.Panel_custom1();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_nb = new javax.swing.JTextField();
        txt_jumlah = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_harga = new javax.swing.JTextField();
        btn_simpan = new Form.customButton();
        btn_ubah = new Form.customButton();
        btn_hapus = new Form.customButton();
        btn_batal = new Form.customButton();
        btn_cari = new Form.customButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPemesanan = new javax.swing.JTable();
        t_cari = new javax.swing.JTextField();
        cbx_kdb = new javax.swing.JComboBox<>();
        txt_tanggal = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        txt_total = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();

        setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        panel_custom11.setBackground(new java.awt.Color(0, 102, 102));
        panel_custom11.setForeground(new java.awt.Color(204, 204, 255));
        panel_custom11.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        panel_custom11.setText("Data Pemesanan Sementara");

        javax.swing.GroupLayout panel_custom11Layout = new javax.swing.GroupLayout(panel_custom11);
        panel_custom11.setLayout(panel_custom11Layout);
        panel_custom11Layout.setHorizontalGroup(
            panel_custom11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel_custom11Layout.setVerticalGroup(
            panel_custom11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText("Kode Barang");

        jLabel2.setText("Nama Barang");

        jLabel3.setText("Jumlah Pemesanan");

        txt_jumlah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_jumlahKeyReleased(evt);
            }
        });

        jLabel4.setText("Harga");

        jLabel5.setText("Tanggal Pemesanan");

        txt_harga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_hargaKeyReleased(evt);
            }
        });

        btn_simpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Save.png"))); // NOI18N
        btn_simpan.setText("SIMPAN");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        btn_ubah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Edit.png"))); // NOI18N
        btn_ubah.setText("UBAH");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });

        btn_hapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Trash.png"))); // NOI18N
        btn_hapus.setText("HAPUS");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_batal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Cancel1.png"))); // NOI18N
        btn_batal.setText("BATAL");
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });

        btn_cari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Search.png"))); // NOI18N
        btn_cari.setText("CARI");
        btn_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariActionPerformed(evt);
            }
        });

        tblPemesanan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPemesanan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPemesananMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPemesanan);

        t_cari.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        t_cari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_cariFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_cariFocusLost(evt);
            }
        });
        t_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_cariActionPerformed(evt);
            }
        });
        t_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_cariKeyPressed(evt);
            }
        });

        cbx_kdb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel6.setText("Total Harga");

        jLabel7.setText("Id");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_custom11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btn_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbx_kdb, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_nb, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(131, 131, 131)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_batal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(61, 75, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(panel_custom11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel7)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_batal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cbx_kdb, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(txt_nb, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btn_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(t_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel2))
                                    .addComponent(txt_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(txt_total, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(37, 37, 37))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE))
        );

        add(jPanel2, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
    try {
        // Validasi ComboBox
        if (cbx_kdb.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Kode barang belum dipilih.");
            return;
        }

        String tampil = cbx_kdb.getSelectedItem().toString();
        if (!barangMap.containsKey(tampil)) {
            JOptionPane.showMessageDialog(null, "Kode barang tidak valid.");
            return;
        }

        int kode_barang = barangMap.get(tampil);
        String nama_barang = tampil.split(" - ")[1];

        // Validasi jumlah
        if (txt_jumlah.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Jumlah tidak boleh kosong.");
            return;
        }
        int jumlah = Integer.parseInt(txt_jumlah.getText().trim());

        // Validasi harga
        if (txt_harga.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Harga tidak boleh kosong.");
            return;
        }
        double harga = Util.parseHarga(txt_harga.getText().trim());

        // Validasi tanggal
        if (txt_tanggal.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Tanggal belum dipilih.");
            return;
        }
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal = df.format(txt_tanggal.getDate());

        double total = jumlah * harga;

        // Query simpan
        String sql = "INSERT INTO pemesanan_barang (kode_barang, nama_barang, jumlah, harga, tanggal_pemesanan, total_harga) VALUES (?, ?, ?, ?, ?, ?)";
        PreparedStatement stat = conn.prepareStatement(sql);
        stat.setInt(1, kode_barang);
        stat.setString(2, nama_barang);
        stat.setInt(3, jumlah);
        stat.setDouble(4, harga);
        stat.setString(5, tanggal);
        stat.setDouble(6, total);

        stat.executeUpdate();

        JOptionPane.showMessageDialog(null, "Data pemesanan berhasil disimpan.");
        kosong();
        datatable();

    } catch (NumberFormatException nfe) {
        JOptionPane.showMessageDialog(null, "Jumlah atau harga tidak valid! Harus angka.");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal menyimpan data: " + e.getMessage());
        e.printStackTrace(); // debug di console
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + ex.getMessage());
    }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
     try {
        if (selectedId == null || selectedId.trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Pilih data terlebih dahulu dari tabel.");
            return;
        }

        if (cbx_kdb.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Kode barang belum dipilih.");
            return;
        }

        String tampil = cbx_kdb.getSelectedItem().toString();
        if (!barangMap.containsKey(tampil)) {
            JOptionPane.showMessageDialog(null, "Kode barang tidak valid.");
            return;
        }

        int kode_barang = barangMap.get(tampil);
        String nama_barang = tampil.split(" - ")[1];

        // Validasi jumlah
        if (txt_jumlah.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Jumlah tidak boleh kosong.");
            return;
        }
        int jumlah = Integer.parseInt(txt_jumlah.getText().trim());

        // Validasi harga
        if (txt_harga.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Harga tidak boleh kosong.");
            return;
        }
        double harga = Util.parseHarga(txt_harga.getText().trim());

        // Validasi tanggal
        if (txt_tanggal.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Tanggal belum dipilih.");
            return;
        }
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        String tanggal = df.format(txt_tanggal.getDate());

        double total = jumlah * harga;

        String sql = "UPDATE pemesanan_barang SET kode_barang=?, nama_barang=?, jumlah=?, harga=?, tanggal_pemesanan=?, total_harga=? WHERE id=?";
        PreparedStatement stat = conn.prepareStatement(sql);
        stat.setInt(1, kode_barang);
        stat.setString(2, nama_barang);
        stat.setInt(3, jumlah);
        stat.setDouble(4, harga);
        stat.setString(5, tanggal);
        stat.setDouble(6, total);
        stat.setInt(7, Integer.parseInt(selectedId));

        int hasil = stat.executeUpdate();
        if (hasil > 0) {
            JOptionPane.showMessageDialog(null, "Data berhasil diubah.");
            kosong();
            datatable();
        } else {
            JOptionPane.showMessageDialog(null, "Data tidak ditemukan atau gagal diubah.");
        }

    } catch (NumberFormatException nfe) {
        JOptionPane.showMessageDialog(null, "Jumlah atau harga tidak valid. Harus berupa angka.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error saat mengubah data: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_ubahActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
       try {
        if (selectedId == null) {
            JOptionPane.showMessageDialog(null, "Pilih data terlebih dahulu dari tabel.");
            return;
        }

        int konfirmasi = JOptionPane.showConfirmDialog(null, "Yakin hapus data ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
        if (konfirmasi == JOptionPane.YES_OPTION) {
            String sql = "DELETE FROM pemesanan_barang WHERE id=?";
            PreparedStatement stat = conn.prepareStatement(sql);
            stat.setInt(1, Integer.parseInt(selectedId));
            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus.");
            kosong();
            datatable();
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal menghapus data: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
       kosong();
       datatable();
    }//GEN-LAST:event_btn_batalActionPerformed

    private void t_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_cariActionPerformed
        datatable();
    }//GEN-LAST:event_t_cariActionPerformed

    private void tblPemesananMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPemesananMouseClicked
    int baris = tblPemesanan.getSelectedRow();
    if (baris != -1) {
        selectedId = tblPemesanan.getValueAt(baris, 0).toString(); // ambil dari kolom ID
        txt_id.setText(selectedId); // ← tampilkan di field

        String kode = tblPemesanan.getValueAt(baris, 1).toString();
        String nama = tblPemesanan.getValueAt(baris, 2).toString();

        for (int i = 0; i < cbx_kdb.getItemCount(); i++) {
            String item = cbx_kdb.getItemAt(i);
            if (item.startsWith(kode + " - ")) {
                cbx_kdb.setSelectedIndex(i);
                break;
            }
        }

        txt_jumlah.setText(tblPemesanan.getValueAt(baris, 3).toString());
        txt_harga.setText(tblPemesanan.getValueAt(baris, 4).toString());
        try {
            java.util.Date tgl = new SimpleDateFormat("yyyy-MM-dd").parse(tblPemesanan.getValueAt(baris, 5).toString());
            txt_tanggal.setDate(tgl);
        } catch (ParseException e) {
            JOptionPane.showMessageDialog(null, "Gagal parsing tanggal: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_tblPemesananMouseClicked

    private void t_cariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            datatable();
        }
    }//GEN-LAST:event_t_cariKeyPressed

    private void txt_jumlahKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_jumlahKeyReleased
        hitungTotal();
    }//GEN-LAST:event_txt_jumlahKeyReleased

    private void txt_hargaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hargaKeyReleased
        hitungTotal();
    }//GEN-LAST:event_txt_hargaKeyReleased

    private void btn_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariActionPerformed
    String cariitem = t_cari.getText().trim();

    Object[] kolom = {"Kode Barang", "Nama Barang", "Jumlah", "Harga", "Tanggal Pemesanan", "Total Harga"};
    tabmode = new DefaultTableModel(null, kolom);
    tblPemesanan.setModel(tabmode);

    DecimalFormat df = new DecimalFormat("#,##0.00");

    String sql = "SELECT * FROM pemesanan_barang WHERE kode_barang LIKE ? OR nama_barang LIKE ? ORDER BY kode_barang ASC";

    try {
        PreparedStatement stat = conn.prepareStatement(sql);
        stat.setString(1, "%" + cariitem + "%");
        stat.setString(2, "%" + cariitem + "%");

        ResultSet hasil = stat.executeQuery();

        while (hasil.next()) {
            String kode = hasil.getString("kode_barang");
            String nama = hasil.getString("nama_barang");
            int jumlah = hasil.getInt("jumlah");
            double harga = hasil.getDouble("harga");
            String tanggal = hasil.getString("tanggal_pemesanan");
            double total = hasil.getDouble("total_harga");

            String[] data = {
                kode,
                nama,
                String.valueOf(jumlah),
                df.format(harga),
                tanggal,
                df.format(total)
            };
            tabmode.addRow(data);
        }

        hasil.close();
        stat.close();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Pencarian gagal: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_cariActionPerformed

    private void t_cariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_cariFocusGained
         
    }//GEN-LAST:event_t_cariFocusGained

    private void t_cariFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_cariFocusLost
        
    }//GEN-LAST:event_t_cariFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Form.customButton btn_batal;
    private Form.customButton btn_cari;
    private Form.customButton btn_hapus;
    private Form.customButton btn_simpan;
    private Form.customButton btn_ubah;
    private javax.swing.JComboBox<String> cbx_kdb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private Form.Panel_custom1 panel_custom11;
    private javax.swing.JTextField t_cari;
    private javax.swing.JTable tblPemesanan;
    private javax.swing.JTextField txt_harga;
    private javax.swing.JTextField txt_id;
    private javax.swing.JTextField txt_jumlah;
    private javax.swing.JTextField txt_nb;
    private com.toedter.calendar.JDateChooser txt_tanggal;
    private javax.swing.JTextField txt_total;
    // End of variables declaration//GEN-END:variables

    private void kosong() {
    txt_id.setEnabled(false);
    txt_id.setText("");
    cbx_kdb.setSelectedIndex(0);
    txt_jumlah.setText("");
    txt_harga.setText("");
    txt_tanggal.setDate(null);
    selectedId = null;
    }

    private void aktif() {
    txt_jumlah.setEnabled(true);
    txt_tanggal.setEnabled(true);
    cbx_kdb.setEnabled(true);
    txt_total.setEditable(false);
    }

    private void datatable() {
    Object[] kolom = {
        "ID", "Kode Barang", "Nama Barang", "Jumlah", "Harga", "Tanggal Pemesanan", "Total Harga"
    };
    tabmode = new DefaultTableModel(null, kolom);
    tblPemesanan.setModel(tabmode);

    try {
        String sql = "SELECT * FROM pemesanan_barang ORDER BY id ASC";
        PreparedStatement pst = conn.prepareStatement(sql);
        ResultSet rs = pst.executeQuery();

        DecimalFormat df = new DecimalFormat("#,##0.00");

        while (rs.next()) {
            Object[] data = {
                rs.getInt("id"),
                rs.getInt("kode_barang"),
                rs.getString("nama_barang"),
                rs.getInt("jumlah"),
                df.format(rs.getDouble("harga")),
                rs.getString("tanggal_pemesanan"),
                df.format(rs.getDouble("total_harga"))
            };
            tabmode.addRow(data);
        }

        // Tidak perlu sembunyikan kolom ID lagi

    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Data gagal ditampilkan: " + e.getMessage());
    }
}

    private void loadKodeBarang() {
        try {
        String sql = "SELECT kode_barang, Nama_Barang FROM barang ORDER BY kode_barang ASC";
        Statement stat = conn.createStatement();
        ResultSet rs = stat.executeQuery(sql);

        cbx_kdb.removeAllItems();
        barangMap.clear();

        while (rs.next()) {
            int kode = rs.getInt("kode_barang");
            String nama = rs.getString("Nama_Barang");
            String tampil = kode + " - " + nama;

            cbx_kdb.addItem(tampil);
            barangMap.put(tampil, kode);
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal memuat kode barang: " + e.getMessage());
    }
    }
    
    private void aturListenerComboBoxBarang() {
         cbx_kdb.addActionListener(new ActionListener() {
             @Override
             public void actionPerformed(ActionEvent ae) {
                 try {
                String tampil = cbx_kdb.getSelectedItem().toString();
                int kode_barang = barangMap.get(tampil);

                String sql = "SELECT Nama_Barang, harga FROM barang WHERE kode_barang = ?";
                PreparedStatement ps = conn.prepareStatement(sql);
                ps.setInt(1, kode_barang);
                ResultSet rs = ps.executeQuery();

                if (rs.next()) {
                    txt_nb.setText(rs.getString("Nama_Barang"));
                    txt_harga.setText(String.valueOf(rs.getDouble("harga")));
                } else {
                    txt_nb.setText("");
                    txt_harga.setText("");
                }

                rs.close();
                ps.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Gagal ambil data barang: " + e.getMessage());
            }
        }
    });
}

    private void hitungTotal() {
        try {
        int jumlah = Integer.parseInt(txt_jumlah.getText());
        double harga = Util.parseHarga(txt_harga.getText());
        double total = jumlah * harga;
        txt_total.setText(Util.formatHarga(total));
    } catch (NumberFormatException e) {
        txt_total.setText("0.00");
    }
    }
}
