/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Form;

import Koneksi.koneksi;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NANRC
 */
public class dataJenisBarang extends javax.swing.JPanel {
    private Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode;
    private Map<String, Integer> barangMap = new HashMap<>();
    private boolean isLoadingCombo = false;

    /**
     * Creates new form dataBarang1
     */
    public dataJenisBarang() {
        initComponents();
        aturListenerComboBox();
        kosong();
        aktif();
        datatable();
        loadKodeBarang();  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        panel_custom11 = new Form.Panel_custom1();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txt_nb = new javax.swing.JTextField();
        txt_jb = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_harga = new javax.swing.JTextField();
        txt_stok = new javax.swing.JTextField();
        btn_simpan = new Form.customButton();
        btn_ubah = new Form.customButton();
        btn_hapus = new Form.customButton();
        btn_batal = new Form.customButton();
        btn_cari = new Form.customButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBarang = new javax.swing.JTable();
        t_cari = new javax.swing.JTextField();
        cbx_kdb = new javax.swing.JComboBox<>();

        setLayout(new java.awt.CardLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        panel_custom11.setBackground(new java.awt.Color(0, 102, 102));
        panel_custom11.setForeground(new java.awt.Color(204, 204, 255));
        panel_custom11.setFont(new java.awt.Font("Segoe UI", 3, 36)); // NOI18N
        panel_custom11.setText("Data Jenis Barang");

        javax.swing.GroupLayout panel_custom11Layout = new javax.swing.GroupLayout(panel_custom11);
        panel_custom11.setLayout(panel_custom11Layout);
        panel_custom11Layout.setHorizontalGroup(
            panel_custom11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel_custom11Layout.setVerticalGroup(
            panel_custom11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jLabel1.setText("Kode Barang");

        jLabel2.setText("Nama Barang");

        jLabel3.setText("Jenis Barang");

        jLabel4.setText("Harga");

        jLabel5.setText("Stok");

        btn_simpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Save.png"))); // NOI18N
        btn_simpan.setText("SIMPAN");
        btn_simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_simpanActionPerformed(evt);
            }
        });

        btn_ubah.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Edit.png"))); // NOI18N
        btn_ubah.setText("UBAH");
        btn_ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ubahActionPerformed(evt);
            }
        });

        btn_hapus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Trash.png"))); // NOI18N
        btn_hapus.setText("HAPUS");
        btn_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_hapusActionPerformed(evt);
            }
        });

        btn_batal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Cancel1.png"))); // NOI18N
        btn_batal.setText("BATAL");
        btn_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_batalActionPerformed(evt);
            }
        });

        btn_cari.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gambar/Search.png"))); // NOI18N
        btn_cari.setText("CARI");
        btn_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cariActionPerformed(evt);
            }
        });

        tblBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBarang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBarangMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBarang);

        t_cari.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        t_cari.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                t_cariFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                t_cariFocusLost(evt);
            }
        });
        t_cari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_cariActionPerformed(evt);
            }
        });
        t_cari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_cariKeyPressed(evt);
            }
        });

        cbx_kdb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_custom11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_nb)
                            .addComponent(txt_jb, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)
                            .addComponent(cbx_kdb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(155, 155, 155)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_harga)
                            .addComponent(txt_stok, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE))
                        .addGap(43, 43, 43)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_simpan, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(btn_ubah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(btn_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(t_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_batal, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(panel_custom11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(txt_harga, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_simpan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_batal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx_kdb, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txt_nb, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txt_stok, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txt_jb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(t_cari, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_ubah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_hapus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE))
        );

        add(jPanel2, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btn_simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_simpanActionPerformed
    try {
        String tampil = cbx_kdb.getSelectedItem().toString();
        int kode_barang = barangMap.get(tampil);

        String sql = "INSERT INTO jenis_barang (kode_barang, Nama_Barang, jenis_barang, harga, stok) VALUES (?, ?, ?, ?, ?)";
        PreparedStatement stat = conn.prepareStatement(sql);
        stat.setInt(1, kode_barang);
        stat.setString(2, txt_nb.getText().trim());
        stat.setString(3, txt_jb.getText().trim());
        stat.setDouble(4, Util.parseHarga(txt_harga.getText().trim()));
        stat.setInt(5, Integer.parseInt(txt_stok.getText().trim()));

        stat.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data berhasil disimpan.");
        kosong();
        datatable();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Harga dan stok harus berupa angka valid.");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal menyimpan data: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_simpanActionPerformed

    private void btn_ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ubahActionPerformed
       try {
        String selectedDisplay = cbx_kdb.getSelectedItem().toString();
        int kodeBarang = barangMap.get(selectedDisplay);

        String sql = "UPDATE jenis_barang SET Nama_Barang=?, jenis_barang=?, harga=?, stok=? WHERE kode_barang=?";
        PreparedStatement stat = conn.prepareStatement(sql);
        stat.setString(1, txt_nb.getText().trim());
        stat.setString(2, txt_jb.getText().trim());
        stat.setDouble(3, Util.parseHarga(txt_harga.getText().trim()));
        stat.setInt(4, Integer.parseInt(txt_stok.getText().trim()));
        stat.setInt(5, kodeBarang);

        stat.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data berhasil diubah.");
        kosong();
        datatable();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Harga dan stok harus berupa angka valid.");
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal mengubah data: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_ubahActionPerformed

    private void btn_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_hapusActionPerformed
      try {
        String selectedDisplay = cbx_kdb.getSelectedItem().toString();
        int kodeBarang = barangMap.get(selectedDisplay);

        String sql = "DELETE FROM jenis_barang WHERE kode_barang=?";
        PreparedStatement stat = conn.prepareStatement(sql);
        stat.setInt(1, kodeBarang);

        stat.executeUpdate();
        JOptionPane.showMessageDialog(null, "Data berhasil dihapus.");
        kosong();
        datatable();
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Gagal menghapus data: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_hapusActionPerformed

    private void btn_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_batalActionPerformed
       kosong();
       datatable();
    }//GEN-LAST:event_btn_batalActionPerformed

    private void t_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_cariActionPerformed
        datatable();
    }//GEN-LAST:event_t_cariActionPerformed

    private void tblBarangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBarangMouseClicked
         int bar = tblBarang.getSelectedRow();
    
        String kode = tblBarang.getValueAt(bar, 0).toString(); // kolom 0 = kode barang
        String nama = tblBarang.getValueAt(bar, 1).toString();
        String jenis = tblBarang.getValueAt(bar, 2).toString();
        String harga = tblBarang.getValueAt(bar, 3).toString();
        String stok = tblBarang.getValueAt(bar, 4).toString();

        // Set ke inputan
        cbx_kdb.setSelectedItem(kode);  // ComboBox kode barang
        txt_nb.setText(nama);
        txt_jb.setText(jenis);
        txt_harga.setText(harga);
        txt_stok.setText(stok);      
    }//GEN-LAST:event_tblBarangMouseClicked

    private void t_cariKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_cariKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            datatable();
        }
    }//GEN-LAST:event_t_cariKeyPressed

    private void btn_cariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cariActionPerformed
    String keyword = t_cari.getText().trim();

    // Buat header kolom tabel
    Object[] Baris = {"Kode Barang", "Nama Barang", "Jenis Barang", "Harga", "Stok"};
    tabmode = new DefaultTableModel(null, Baris);
    tblBarang.setModel(tabmode);

    // SQL cari berdasarkan kode atau nama barang dari tabel jenis_barang
    String sql = "SELECT * FROM jenis_barang WHERE kode_barang LIKE ? OR nama_barang LIKE ?";

    try {
        PreparedStatement pst = conn.prepareStatement(sql);
        pst.setString(1, "%" + keyword + "%");
        pst.setString(2, "%" + keyword + "%");

        ResultSet rs = pst.executeQuery();

        while (rs.next()) {
            String[] data = {
                rs.getString("kode_barang"),
                rs.getString("nama_barang"),
                rs.getString("jenis_barang"),
                rs.getString("harga"),
                rs.getString("stok")
            };
            tabmode.addRow(data);
        }

        rs.close();
        pst.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Pencarian gagal: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_cariActionPerformed

    private void t_cariFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_cariFocusGained
        
    }//GEN-LAST:event_t_cariFocusGained

    private void t_cariFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_t_cariFocusLost
       
    }//GEN-LAST:event_t_cariFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Form.customButton btn_batal;
    private Form.customButton btn_cari;
    private Form.customButton btn_hapus;
    private Form.customButton btn_simpan;
    private Form.customButton btn_ubah;
    private javax.swing.JComboBox<String> cbx_kdb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private Form.Panel_custom1 panel_custom11;
    private javax.swing.JTextField t_cari;
    private javax.swing.JTable tblBarang;
    private javax.swing.JTextField txt_harga;
    private javax.swing.JTextField txt_jb;
    private javax.swing.JTextField txt_nb;
    private javax.swing.JTextField txt_stok;
    // End of variables declaration//GEN-END:variables

    private void kosong() {
        txt_nb.setText("");
        txt_jb.setText("");
        txt_harga.setText("");
        txt_stok.setText("");
    }

    private void aktif() {
        txt_jb.requestFocus();
    }

    private void datatable() {
    Object[] Baris = {"Kode Barang", "Nama Barang", "Jenis Barang", "Harga", "Stok"};
    tabmode = new DefaultTableModel(null, Baris);
    DecimalFormat df = new DecimalFormat("#,##0.00");
    String cariitem = t_cari.getText().trim();

    try {
        String sql = "SELECT * FROM jenis_barang " +
                     "WHERE kode_barang LIKE ? " +
                     "OR nama_barang LIKE ? " +
                     "OR jenis_barang LIKE ? " +
                     "ORDER BY kode_barang ASC";

        PreparedStatement stat = conn.prepareStatement(sql);
        String keyword = "%" + cariitem + "%";
        stat.setString(1, keyword);
        stat.setString(2, keyword);
        stat.setString(3, keyword);

        ResultSet hasil = stat.executeQuery();
        while (hasil.next()) {
            tabmode.addRow(new Object[]{
                hasil.getString("kode_barang"),
                hasil.getString("nama_barang"),
                hasil.getString("jenis_barang"),
                df.format(hasil.getDouble("harga")),
                hasil.getString("stok")
            });
        }
        tblBarang.setModel(tabmode);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Data gagal dipanggil: " + e.getMessage());
    }
}

    private void aturListenerComboBox() {
        cbx_kdb.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
               if (isLoadingCombo) return;

            try {
                String display = cbx_kdb.getSelectedItem().toString();

                if (barangMap.containsKey(display)) {
                    int kode = barangMap.get(display);

                    String sql = "SELECT Nama_Barang, harga, stok FROM barang WHERE kode_barang = ?";
                    PreparedStatement ps = conn.prepareStatement(sql);
                    ps.setInt(1, kode);
                    ResultSet rs = ps.executeQuery();

                    if (rs.next()) {
                        txt_nb.setText(rs.getString("Nama_Barang"));
                        txt_harga.setText(rs.getString("harga")); // ⬅️ Ambil harga
                        txt_stok.setText(rs.getString("stok"));   // ⬅️ Ambil stok
                    } else {
                        txt_nb.setText("");
                        txt_harga.setText("");
                        txt_stok.setText("");
                    }

                    rs.close();
                    ps.close();
                } else {
                    txt_nb.setText("");
                    txt_harga.setText("");
                    txt_stok.setText("");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Gagal ambil data barang: " + e.getMessage());
            }
        }
    });
    }

    private void loadKodeBarang() {
        try {
        isLoadingCombo = true; // ✅ Nonaktifkan listener sementara

        String sql = "SELECT kode_barang, Nama_Barang FROM barang ORDER BY kode_barang ASC";
        Statement stat = conn.createStatement();
        ResultSet rs = stat.executeQuery(sql);

        cbx_kdb.removeAllItems();
        barangMap.clear();

        while (rs.next()) {
            int kode = rs.getInt("kode_barang");
            String nama = rs.getString("Nama_Barang");
            String tampil = kode + " - " + nama;

            if (!barangMap.containsValue(kode)) {
                cbx_kdb.addItem(tampil);
                barangMap.put(tampil, kode);
            }
        }

        isLoadingCombo = false; // ✅ Aktifkan lagi listener
    } catch (SQLException e) {
        isLoadingCombo = false; // ✅ Pastikan dinyalakan kembali meski error
        JOptionPane.showMessageDialog(null, "Gagal memuat kode barang: " + e.getMessage());
    }
    }}

